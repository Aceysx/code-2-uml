@startuml
!pragma graphviz_dot jdot
skinparam Rectangle{
	BorderColor White
	shadowing false
}

package com.listener{
package ParserListener <<Rectangle>>{
class ParserListener{
- Structure structure

ParserListener (Structure structure)
+ Structure getStructure ()

}
}
}
package com.listener{
package JavaListener <<Rectangle>>{
class JavaListener{
- JavaParser parser

+ JavaListener (Structure structure,JavaParser parser)
+ void enterImportDeclaration (JavaParser.ImportDeclarationContext ctx)
+ void enterPackageDeclaration (JavaParser.PackageDeclarationContext ctx)
+ void enterTypeDeclaration (JavaParser.TypeDeclarationContext ctx)
- String getCurrentType (ParseTree classContext)
+ void enterInterfaceBodyDeclaration (JavaParser.InterfaceBodyDeclarationContext ctx)
+ void enterClassBodyDeclaration (JavaParser.ClassBodyDeclarationContext ctx)
- Method parseInterfaceMethod (JavaParser.InterfaceBodyDeclarationContext ctx)
- Method parseMethod (JavaParser.ClassBodyDeclarationContext ctx)
- Field parseField (JavaParser.ClassBodyDeclarationContext ctx)
- List<Modifier> findModifiers (RuleContext ctx)
- Collection<ParseTree> find (RuleContext ctx,String xpath)
- boolean isMethodContext (JavaParser.ClassBodyDeclarationContext ctx)
- boolean isFiledContext (JavaParser.ClassBodyDeclarationContext ctx)
- List<Type> parseClassTypes (ParseTree context)
- List<Modifier> parseClassModifiers (RuleContext ctx)
- List<Modifier> parseMethodModifiers (RuleContext ctx,boolean isConstructor)
- JavaStructure getJavaStructure ()
- String textOf (RuleContext context)

}
}
}
package com.util{
package FileUtil <<Rectangle>>{
class FileUtil{

+ static List<String> findFilesPathBy (File dir)
- static void get (File file,List files)
+ static void write (String res)

}
}
}
package com.util{
package Constant <<Rectangle>>{
class Constant{
+ final static String UML_TEXT_PATH
+ final static String START_TOKEN
+ final static String DEFAULT_STYLE_TOKEN
+ final static String SPACE_TOKEN
+ final static String NEW_LINE
+ final static String END_TOKEN
+ final static String PUBLIC_MODIFIER_TOKEN
+ final static String PROTECTED_MODIFIER_TOKEN
+ final static String PRIVATE_MODIFIER_TOKEN
+ final static String ANNOTATION_TOKEN
+ final static String INTERFACE_TOKEN
+ final static String CLASS_TOKEN
+ final static String WRAP_CLASS_STYLE_TOKEN


}
}
}
package com{
package ApplicationMain <<Rectangle>>{
class ApplicationMain{
- static String projectDir
- static JavaService javaService

+ static void main (String[] args)

}
}
}
package com.model{
package Method <<Rectangle>>{
class Method{
- List<Modifier> modifiers
~ boolean isConstructor
- String name
- List<Param> params
+ static private public String name
- String name

- Method (boolean isConstructor,List<Modifier> modifiers,String methodName,List<Param> params)
+ static Param ofParam (String text)
+ static Method of (boolean isConstructor,List<Modifier> modifiers,String methodName,List<Param> params)
+ static Param (String text)
Param (String text)
+ String getName ()

}
}
}
package com.model{
package Type <<Rectangle>>{
class Type{
- String text

+ Type (String text)
+ static Type of (String text)

}
}
}
package com.model{
package Modifier <<Rectangle>>{
class Modifier{
- String text

- Modifier (String text)
+ static Modifier of (String text)

}
}
}
package com.model{
package Package <<Rectangle>>{
class Package{
- String modifier
- String text

- Package (String modifier,String text)
+ static Package of (String text)

}
}
}
package com.model{
package JavaStructure <<Rectangle>>{
class JavaStructure{
- Package packagee
- List<Import> imports
- List<Klass> klasses

+ void updatePackageName (String packageName)
+ void addImport (String text)
+ void addKlass (List<Modifier> modifiers,String type,String className,List<Type> types)
+ Klass getKlass ()

}
}
}
package com.model{
package Structure <<Rectangle>>{
class Structure{


}
}
}
package com.model{
package Import <<Rectangle>>{
class Import{
- String modifier
- String text

- Import (String text)
+ static Import of (String text)

}
}
}
package com.model{
package Field <<Rectangle>>{
class Field{
- List<Modifier> modifiers
- String name

- Field (List<Modifier> modifiers,String fieldName)
+ static Field of (List<Modifier> modifiers,String fieldName)

}
}
}
package com.model{
package Klass <<Rectangle>>{
class Klass{
- List<Modifier> modifiers
- String type
- String name
- List<Type> types
- List<Field> fields
- List<Method> methods

Klass (List<Modifier> modifiers,String type,String className,List<Type> types)
+ void addField (Field field)
+ void addMethod (Method method)

}
}
}
package com.service{
package JavaService <<Rectangle>>{
class JavaService{

+ void parse (String projectDir)

}
}
}
package com.service{
package JavaParserService <<Rectangle>>{
class JavaParserService{

~ static List<Structure> parse (String projectDir)
- static List<JavaParser> toParses (List<String> filePaths)

}
}
}
package com.service{
package JavaUml <<Rectangle>>{
class JavaUml{
- final List<JavaStructure> structures
- StringBuffer umlText

- JavaUml (List<Structure> structures)
~ static String parse (List<Structure> structures)
- void parseClassRelation ()
- void png ()
- String format ()
- void parseClasses ()
- void parseMethods (List<Method> methods)
- void parseFields (List<Field> fields)
- String modifierTokens (List<Modifier> modifiers)
- String modifierIcon (String text)

}
}
}
JavaParserBaseListener -[hidden]--> ParserListener : extends↑
ParserListener -[hidden]--> JavaListener : extends↑
Structure -[hidden]--> JavaStructure : extends↑

@enduml